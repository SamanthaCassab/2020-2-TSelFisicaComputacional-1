
# Tarea 3

> Envío inicial del PR: **22 de abril**.
>
> Aceptación PR *final*: **30 de abril**.


## Ejercicio 1

Llamemos $c_n$ al valor del parámetro $c$ donde ocurre la bifurcación de doblamiento de periodo para el mapeo $Q_c(x)=x^2+c$, es decir, donde la órbita de periodo $2^n$ nace. Como hemos visto, tenemos que $c_0=1/4$ marca la aparición del atractor de periodo $2^0=1$, $c_1=-1/4$ corresponde a la aparición del atractor de periodo $2^1=2$ y $c_2=-3/4$ a la aparición del atractor de periodo $2^2=4$.

Calculen los valores de $c_r$ (al menos hasta $c_6$). Con estos valores, definimos la secuencia: $\{f_0, f_1, f_2, \dots\}$, donde

\begin{equation}
f_n = \frac{c_n-c_{n+1}}{c_{n+1}-c_{n+2}} .
\end{equation}

La pregunta es, ¿a qué valor converge esta secuencia?, es decir, dar una estimación de $f_\infty$.


*Hint:* Para realizar este ejercicio deben calcular el atractor para varios valores de $c$, de tal manera que puedan aislar las órbitas de periodo $2^p$ y de ahí determinar varios valores $c_n$. Se requerir suficiente cuidado para obtener una buena aproximación de $c_n$.
Una opción se basa en recordar/usar que las bifurcaciones de doblamiento de periodo ocurren cuando los puntos de la órbita de periodo $p$ se tornan en repulsores, es decir, $(Q_c^p)'(x)=-1$. Esta opción, entonces, involucra obtener los valores $c_n$ a partir de órbitas periódicas de periodo $2^n$ usando los polinomios $Q_c^{2^p}(x)$ y diferenciación automática.

```julia
using Plots
```

```julia
include("NumDual.jl")
```

```julia
using Main.NumDual
```

```julia
"""
iterar2 evalua f nit veces y devuelve los ultimos n iterados
"""
function iterar2(F::Function,x0::Float64,nit::Int,n)
    X= [x0]
    for i = 1:nit
    x0 = F(x0)
     push!(X,x0)   
    end
    return [X[end-i] for i=0:n-1]        
end
"""
Calcula la derivada (d/dx)[Q^p(x)]
"""
# Calcula la dervida de los n ultimos elementos de Xr

function deriv_P(F::Function, P::Int, Xr)
    # Xr es un vector de puntos de periodo P
    
    der = F(var_dual(Xr[end])).y 
    
    for i in 1:(P-1)
        der = der*F(var_dual(Xr[end - i])).y
    end
    
    return der # derivada de (F^P)(x) en x0 (que es un punto de periodo P)
    
end
"""
 funcion que calcula las cn's para una funcion Qc que se itera nit veces, n 
    es el numero de periodo, [ci,cf] es el intervalo en el que se encuentra la 
    c deseada, y Δ es el numero de pasos.
    """
function c_n(Qc::Function, nit, n, ci, cf, Δ)
    
    C = ci:Δ:cf
    
    verif_deriv = Float64[]
    
    for c in C
        xr  = iterar2(x -> Qc(x,c), 1.0, nit, n)
        der = deriv_P(x -> Qc(x,c), n, xr)
        
        push!(verif_deriv, abs(abs(der) - 1))
    end
    
    minimo = minimum(verif_deriv)
    
    j = 1
    
    while verif_deriv[j] != minimo
        j += 1
    end
    
    return verif_deriv[j], C[j]
    
end
```

```julia
"""
iterar(f :: Function, x0, n :: Int)

Itera el mapeo `f` `n` veces, usando como condición inicial
`x0` y regresa el vector de la sucesión de puntos iterados.
"""
function iterar(f::Function, x0, n::Int)
    X = [x0]
    
    for i = 1:n
        x0 = f(x0)
        push!(X, x0)
    end
    
    X
end
"""
`diag_bifurc(F::Function, C, n_it::Int, m_end::Int)` \n

Dibuj el diagrama de bifurcación sobre el conjunto de parámetros `C` (el cual es un rango), 
a partir de iterar `n_it` veces la función `F`. De las `n_it` iteracciones
sólo se pintan las últimas `m_end`
"""

function diag_bifurc(F::Function, C, n_it::Int, m_end::Int)
    
    x0 = 1.0
    
    p = plot(label = "", xlabel = "c")
    
    for c in C
        
        iter = iterar(x -> F(x, c), x0, n_it)
        
        X = [c]
        Y = [iter[end]]

        for i = 1:(m_end-1)
            push!(X, c)
            push!(Y, iter[end-i])      
        end

        scatter!(X, Y, label = "", 
            ms = 1.5, mc = :red3, marker = stroke(0, 0, :black, :dot))

    end
        
    return p
    
end
```

```julia
# PERIODO 2^6 = 64

# parámetros para diag_bifurc
n_it = 2000 # número de iteraciones
m_end = 200 # se guarda los m_end últimos de las n_it iteraciones
Δ = 1e-6    # paso en el eje c
C = -1.4006:-Δ:-1.4013 # rango de parámetros c ∈ C testeados

# Parámetros adicionales para una mejor visualización
tit = "Periodo: 2^6 = 64"
limx = (-1.4013,-1.4006)
limy = (-0.04, 0.02)
vert = [-1.40074, -1.4009, -1.4008286] # = [ci, c_f, c_f]
rad = 1e-2;
```

```julia
# Gráfica
diag_bifurc(Qc, C, n_it, m_end)
plot!(title = tit, xlims = limx, ylims = limy, aspectratio = rad)
vline!(vert, l = 1.5, lc = :blue3, ls = :dash, label = "")
```

```julia
# Cálculo de c_6: 
c_6 = c_n(Qc, 200000, 64, -1.40074, -1.4009, 1e-7)
```

```julia
# PERIODO 2^7 = 128

# parámetros para diag_bifurc
n_it = 2000
m_end = 200
Δ = 8e-7
C = -1.4008:-Δ:-1.4013 # c ∈ [-3/4, 1/4]

# Parámetros adicionales para una mejor visualización
tit = "2^7 = 128"
limx = (-1.4013,-1.4008)
limy = (-0.04, 0.02)
vert = [-1.401065, -1.40112, -1.4010852]
rad = 1e-2;
```

```julia
# Gráfica para estimar c_7
diag_bifurc(Qc, C, n_it, m_end)
plot!(title = tit, xlims = limx, ylims = limy, aspectratio = rad)
vline!(vert, l = 1.5, lc = :blue3, ls = :dash, label = "")
```

```julia
# Cálculo de c_7 :
c_7 = c_n(Qc, 200000, 128, -1.401065, -1.40112, 1e-7)
```

## Ejercicio 2

Repitan el ejercicio anterior para el mapeo $S_c(x) = c \sin(x)$.

- ¿Cómo se comparan los valores obtenidos de $f_n$?

- ¿Qué interpretación le pueden dar a este resultado, en comparación del ejercicio anterior?

```julia
F(x,c)= c*sin(x)
c_1= c_n(F,2000000,2,2.1,2.378,1e-4)
c_2=c_n(F,2000000,4,2.4,2.7,1e-4)
c_3=c_n(F,200000,8,2.692,2.8,1e-5)
c_4=c_n(F,200000,16,2.7,2.8,1e-5)
c_5 = c_n(F,300000,32,2.73,2.8,1e-7) 
c_6 = c_n(F,400000,64,2.79,2.9,1e-7)
```

## Ejercicio 3

Como se ve en la Fig. 1 del diagrama de bifurcaciones de $Q_c$, $x=0$ pertenece a un ciclo de periodo $2^n$ para ciertos valores $C_n$ del parámetro. Dichos valores son *especiales*, ya que el hecho de que $x=0$ pertenezca a un ciclo de periodo $2^n$ define los llamados *ciclos superestable*, donde tenemos $(Q^{2^p}_{C_n})'(0)=0$.

- ¿A qué converge la secuencia $f_n$, definida ahora a partir de los valores $C_n$.

- De los $2^p$ puntos del ciclo de periodo $2^p$, es decir, $\{0, p_1, \dots p_{2^{n-1}}\,\}$ hay uno (distinto del 0) cuya distancia a 0 es la menor; a esa distancia la identificaremos como $d_n$. Calcular numéricamente a qué converge la secuencia $d_n/d_{n+1}$.

```julia
```
